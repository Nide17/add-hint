#!/bin/bash
###################### 1. GLOBAL VARIBALES ###################
# DEFAULT DIRECTORY
CWD=$(pwd -P)

# CURRENT SCRIPT NAME
SCRIPTNAME=$(basename $0)

# DEFAULT ARGUMENTS TO THE COMMAND
OPTIONS=""
INTERACTIVE=""

# TYPE - FILE OR DIRECTORY
TYPE=""

# MINIMUM DEPTH
MAXDEPTH="-maxdepth 1"
 
 
###################### 2. FUNCTIONS DEFINITION ###################
# USAGE FUNCTION - MANUAL PAGE
usage() {
    echo -e "\033[46m\033[1;37m\nUsage: $SCRIPTNAME [options] <pattern> <hint> [directories]\033[0m\n" 

    echo "Performs a batch hint adding to the files or directories by adding a hint to the end of their names, based on a glob wildcard (GLOBBING). If one or more directories are specified, batch hint adding will operate to files inside those directories; otherwise it will operate on all files matching the wildcard in the cwd."

    echo
    echo -e "\033[1;97m<pattern> is an glob wildcard as used by find, <hint> is any specified hint\033[0m"
    echo    
    echo -e "\033[4;33mOptions can be one or more of:\033[0m"
    echo
    echo "  -d | --dirs-only        Limit the hint adding to directories only."
    echo "  -f | --files-only       Limit the hint adding to regular files only."
    echo "  -h | --help             Print this usage message and exit"
    echo "  -i | --interactive      Do not automatically add hints; instead, provide a list of original and, 
                          modified names and ask the user to confirm the hint adding before it happens."
    echo "  -r | --recursive        Recursively descend directories; otherwise,
                          processes only files in the directories specified, or cwd."
}

# ERROR FUNCTION
errorMessage() {
    echo -e "\n\033[1;91m$SCRIPTNAME: $1\033[0m"
}

# RENAMING THE RESULTS USING mv -n "$CURFILE" $NEWFILE
addhint () {
    for DIR in "${DIRS[@]}" ; do

        # EXIT IF ONE OF THE DIRECTORY PASSED DOESN'T EXIST
        if [ ! -d "$DIR" ]; then
            errorMessage "DIRECTORY NOT FOUND: \033[0;31m$DIR\033[0m\n"
            usage
            exit 1
        fi

        # SET CORRECT DIRECTORIES TO RENAME THROUGH
        CORRECTDIRS+=($DIR)
    done

    if [[ -z $PATTERN ]] ; then
        errorMessage "\033[43mPATTERN IS REQUIRED\033[0m "
        usage
        exit 1
        
    elif [[ -z $HINT ]] ; then
        errorMessage "\033[43mHINT IS REQUIRED\033[0m "
        usage
        exit 1

        # PATTERN AND HINT ARE SPECIFIED 

    else

        echo -e "\n\033[0;30m\033[43mSTARTING RENAMING IN ${CORRECTDIRS[@]} DIRECTOR(Y-IES)\033[0m"

        FILES+=($(find ${CORRECTDIRS[@]} $MAXDEPTH $TYPE -name "$PATTERN"))
        echo -e "\n\033[1;37mFILES TO BE RENAMED: (${#FILES[@]})\033[0m\n\033[0;96m${FILES[@]}\n\033[0m"

        if [[ "${#FILES[@]}" -gt 0 ]] ; then

            # RENAMING ONE BY ONE
            for FILE in "${FILES[@]}" ; do

                # GENERATING A NEW NAME BASED ON OLD NAME
                if [[ $FILE == *$HINT ]] ; then
                    echo -e "\033[0;31mHINT CAN'T BE ADDED ON $FILE, HINT WAS ALREADY EXISTING\033[0m"

                elif [[ "$FILE" != "$NEWFILENAME" ]] ; then
                    NEWFILENAME="$FILE-$HINT"
                    echo -e "$FILE \033[1;91m->\033[0m \033[1;37m$NEWFILENAME\033[0m"

                    # RENAMING THE FILE TO NEW NAME
                    mv $INTERACTIVE "$FILE" $NEWFILENAME
                fi
            done

        else
            errorMessage "\033[42mNOTHING FOUND, TRY AGAIN!:\033[0m \033[0;31m$1\033[0m\n"
            usage
            exit 1
        fi

        echo -e "\n\033[0;37m\033[42mFINISHED RENAMING.\033[0m âœ…"
    fi    

    
}

###################### 3. PROCESS OPTIONS ###################
# IF NO ARGUMENTS SPECIFIED - DISPLAY ERROR, USAGE AND EXIT
if [ $# -eq 0 ] ; then
    errorMessage "YOU MUST PROVIDE AN OPTION AT LEAST!\n"
    usage
    exit 1
fi

# IF MORE THAN 0 ARGS
while [ $# -gt 0 ] ; do

    case "$1" in

        # PRINT HELP (USAGE) MESSAGE
        -h | --help) 
            usage
            exit 0
            ;;

        # DIRECTORIES ONLY
        -d | --dirs-only)
            TYPE="-type d"
            ;;

        # FILES ONLY
        -f | --files-only) 
            TYPE="-type f"
            ;;
        
        # INTERACTIVE RENAMING
        -i | --interactive) 
            INTERACTIVE="-i"
            ;;

        # RENAMING RECURSIVELY
        -r | --recursive)
            MAXDEPTH=""
            ;;

        # WHEN THE SPECIFIED OPTION IS NOT AVAILABLE
        -*) errorMessage "INVALID OPTION SPECIFIED: \033[43m$1\033[0m\n"
            usage
            exit 1
            ;;

        # DEFAULT CASE
        *) break
            ;;
    esac

    # SHIFT TO THE NEXT OPTION
    shift
done

###################### 4. THE BODY ###################
# PATTERN TO BE FOUND = $1 AFTER PROCESSING OPTIONS
PATTERN=$1

# HINT FOR THE NAME - IF THE HINT IS NOT A FILE OR DIRECTORY, DON'T PROCEED
if [[ -d $2 || -f $2 ]]; then
    errorMessage "INVALID HINT SPECIFIED: \033[0;31m$2\033[0m\n"
    usage
    exit 1
else
    HINT=$2
fi

# CHECKING FOR LOCATION OF THE RENAMING
if [[ $# -lt 3 ]] ; then 
    DIRS+=($CWD)

else
    DIRS=( "${@:3}" )
fi

# CALLING THE FUNCTION TO RENAME AND LIST ALL THE DIRECTORY
echo -e "\nNAME WITH PATTERN: \033[0;96m$PATTERN\033[0m"
echo -e "RENAME WITH HINT: \033[0;96m$HINT\033[0m"
addhint 

echo -e "\n\033[1;34m\033[4;34mALL FILES IN THESE DIRECTORIES:\033[0m\n"
ls -l --color=auto ${CORRECTDIRS[@]}